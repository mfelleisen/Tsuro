#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4.0.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 119 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 204 221 170 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 85 236 0 0 0 0 -1 -1
2 35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 75 253 180 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 178 178 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 23 #"Lucida Sans Typewriter\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 220
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 221 170
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 165
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 119 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 85 236 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 253 180 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 178 178 0
0 0 -1 -1           0 2529 0 28 3 16 #"#lang racket/gui"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; a data representation for tiles, plus rendering them as picts "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 4 #"pict"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict?"
0 0 24 3 1 #" "
0 0 14 3 7 #"lc-find"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 33 #"Tsuro/Code/Common/port-alphabetic"
0 0 24 3 1 #" "
0 0 14 3 5 #"port?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ("
0 0 17 3 7 #"require"
0 0 17 3 2 #" ("
0 0 17 3 7 #"only-in"
0 0 17 3 1 #" "
0 0 17 3 29 #"Tsuro/Code/Common/port-digits"
0 0 17 3 1 #" "
0 0 17 3 7 #"port?))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"edge/c"
0 0 24 3 2 #" ["
0 0 14 3 6 #"list/c"
0 0 24 3 1 #" "
0 0 14 3 5 #"port?"
0 0 24 3 1 #" "
0 0 14 3 5 #"port?"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sub-pict?"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 13 #"with-handlers"
0 0 24 3 3 #" (["
0 0 14 3 9 #"exn:fail?"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 5 #")]) ("
0 0 15 3 2 #"de"
0 0 15 3 11 #"fine-values"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 7 #"lc-find"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 12 #";; constants"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"contract-out"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 14 3 8 #"integer?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"edge"
0 0 24 3 2 #" ["
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"port?"
0 0 24 3 1 #" "
0 0 14 3 5 #"port?"
0 0 24 3 1 #" "
0 0 14 3 6 #"edge/c"
0 0 24 3 2 #"]]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 12 #";; type Tile"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"tile?"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"any/c"
0 0 24 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 10 #"blank-tile"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"tile1"
0 0 24 3 6 #"      "
0 0 14 3 5 #"tile?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"tile2"
0 0 24 3 6 #"      "
0 0 14 3 5 #"tile?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"90tile2"
0 0 24 3 4 #"    "
0 0 14 3 5 #"tile?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 11 #"create-tile"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 2 #" ["
0 0 14 3 6 #"list/c"
0 0 24 3 1 #" "
0 0 14 3 6 #"edge/c"
0 0 24 3 1 #" "
0 0 14 3 6 #"edge/c"
0 0 24 3 1 #" "
0 0 14 3 6 #"edge/c"
0 0 24 3 1 #" "
0 0 14 3 6 #"edge/c"
0 0 24 3 2 #"] "
0 0 14 3 5 #"tile?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 10 #"tile->pict"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile?"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 10 #"add-player"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"->i"
0 0 24 3 3 #" (["
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict?"
0 0 24 3 2 #"]["
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict?"
0 0 24 3 2 #"]["
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 5 #"port?"
0 0 24 3 4 #"]) ["
0 0 14 3 1 #"r"
0 0 24 3 2 #" ("
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 5 #"and/c"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sub-pict?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; -----------------------------------------------------------------"
 #"----------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 9 #"except-in"
0 0 24 3 1 #" "
0 0 14 3 33 #"Tsuro/Code/Common/port-alphabetic"
0 0 24 3 1 #" "
0 0 14 3 5 #"port?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ("
0 0 17 3 7 #"require"
0 0 17 3 2 #" ("
0 0 17 3 9 #"except-in"
0 0 17 3 1 #" "
0 0 17 3 29 #"Tsuro/Code/Common/port-digits"
0 0 17 3 1 #" "
0 0 17 3 7 #"port?))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 17 #"Tsuro/Code/Lib/or"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 13 #"Tsuro/Code/Li"
0 0 14 3 1 #"b"
0 0 14 3 7 #"/finder"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 9 #"except-in"
0 0 24 3 1 #" "
0 0 14 3 4 #"pict"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict?"
0 0 24 3 1 #" "
0 0 14 3 7 #"lc-find"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; -----------------------------------------------------------------"
 #"----------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; data representation of tiles"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #"#| The information world consists of tiles with ports and connection"
 #"s between ports. "
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"   A blank tile looks as follows: "
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"        0    1"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"    +---|----|---+"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"    |            |"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"  7 -            - 2"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"    |       "
0 0 17 3 6 #"     |"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"  6 -            - 3"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"    |            |"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"    +---|----|---+"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"        5    4"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 102
(
 #"   Each labeled line crossing a border is a _port_. Ports can be cal"
 #"led anything; see port-signature. "
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"   A configured tile connects four pairs of disttinct ports with eac"
 #"h other:"
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 15           4 17 2694
(
 #"(90 90 0 90 ((do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-"
 #"set-brush! ((255 255 255 1.0) solid #f #f #f)) (set-font (12 #f defa"
 #"ult normal normal #f default #f aligned)) (set-smoothing unsmoothed)"
 #" (set-text-mode transparent) (set-alpha 1.0) (set-clipping-region #f"
 #") (set-background (255 255 255 1.0)) (set-text-background (255 255 2"
 #"55 1.0)) (set-text-foreground (0 0 0 1.0)) (set-smoothing aligned) ("
 #"set-clipping-region (#t (((((0.0 . 0.0) (90.0 . 0.0) (90.0 . 90.0) ("
 #"0.0 . 90.0)))) . any))) (do-set-brush! ((190 190 190 1.0) solid #f #"
 #"f #f)) (do-set-pen! ((255 165 0 1.0) 1 solid round round #f)) (draw-"
 #"rectangle 0 0 90 90) (do-set-brush! ((255 255 255 1.0) solid #f #f #"
 #"f)) (do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-set-brush"
 #"! ((255 255 0 1.0) solid #f #f #f)) (draw-ellipse -3 27 6 6) (do-set"
 #"-brush! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen! ((0 0 0 1.0"
 #") 1 solid round round #f)) (do-set-brush! ((255 255 0 1.0) solid #f "
 #"#f #f)) (draw-ellipse -3 57 6 6) (do-set-brush! ((255 255 255 1.0) s"
 #"olid #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) ("
 #"do-set-brush! ((255 255 0 1.0) solid #f #f #f)) (draw-ellipse 27 87 "
 #"6 6) (do-set-brush! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen!"
 #" ((0 0 0 1.0) 1 solid round round #f)) (do-set-brush! ((255 255 0 1."
 #"0) solid #f #f #f)) (draw-ellipse 57 87 6 6) (do-set-brush! ((255 25"
 #"5 255 1.0) solid #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 solid round "
 #"round #f)) (do-set-brush! ((255 255 0 1.0) solid #f #f #f)) (draw-el"
 #"lipse 87 57 6 6) (do-set-brush! ((255 255 255 1.0) solid #f #f #f)) "
 #"(do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-set-brush! (("
 #"255 255 0 1.0) solid #f #f #f)) (draw-ellipse 87 27 6 6) (do-set-bru"
 #"sh! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 "
 #"solid round round #f)) (do-set-brush! ((255 255 0 1.0) solid #f #f #"
 #"f)) (draw-ellipse 57 -3 6 6) (do-set-brush! ((255 255 255 1.0) solid"
 #" #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-s"
 #"et-brush! ((255 255 0 1.0) solid #f #f #f)) (draw-ellipse 27 -3 6 6)"
 #" (do-set-brush! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen! ((0"
 #" 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((111 77 33 1.0) 3 s"
 #"olid round round #f)) (draw-spline 30 0 45 45 0 60) (do-set-pen! ((0"
 #" 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((222 154 66 1.0) 3 "
 #"solid round round #f)) (draw-spline 60 0 45 45 0 30) (do-set-pen! (("
 #"0 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((77 231 99 1.0) 3 "
 #"solid round round #f)) (draw-spline 90 30 45 45 90 60) (do-set-pen! "
 #"((0 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((188 52 132 1.0)"
 #" 3 solid round round #f)) (draw-spline 60 90 45 45 30 90) (do-set-pe"
 #"n! ((0 0 0 1.0) 1 solid round round #f))))"
) 0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 17 3 4 #"When"
0 0 17 3 1 #" "
0 0 17 3 3 #"two"
0 0 17 3 1 #" "
0 0 17 3 10 #"configured"
0 0 17 3 1 #" "
0 0 17 3 5 #"tiles"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 1 #" "
0 0 17 3 5 #"after"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 8 #"rotation"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"90"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"180"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 3 #"270"
0 0 17 3 1 #" "
0 0 17 3 7 #"degrees"
0 0 17 3 1 #","
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 17 3 4 #"they"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 10 #"considered"
0 0 17 3 1 #" "
0 0 17 3 11 #"equivalent."
0 0 17 3 1 #" "
0 0 17 3 4 #"Here"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"90"
0 0 17 3 1 #" "
0 0 17 3 6 #"degree"
0 0 17 3 1 #" "
0 0 17 3 8 #"rotation"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"above"
0 0 17 3 1 #" "
0 0 17 3 5 #"tile:"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 15           4 17 2694
(
 #"(90 90 0 90 ((do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-"
 #"set-brush! ((255 255 255 1.0) solid #f #f #f)) (set-font (12 #f defa"
 #"ult normal normal #f default #f aligned)) (set-smoothing unsmoothed)"
 #" (set-text-mode transparent) (set-alpha 1.0) (set-clipping-region #f"
 #") (set-background (255 255 255 1.0)) (set-text-background (255 255 2"
 #"55 1.0)) (set-text-foreground (0 0 0 1.0)) (set-smoothing aligned) ("
 #"set-clipping-region (#t (((((0.0 . 0.0) (90.0 . 0.0) (90.0 . 90.0) ("
 #"0.0 . 90.0)))) . any))) (do-set-brush! ((190 190 190 1.0) solid #f #"
 #"f #f)) (do-set-pen! ((255 165 0 1.0) 1 solid round round #f)) (draw-"
 #"rectangle 0 0 90 90) (do-set-brush! ((255 255 255 1.0) solid #f #f #"
 #"f)) (do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-set-brush"
 #"! ((255 255 0 1.0) solid #f #f #f)) (draw-ellipse -3 27 6 6) (do-set"
 #"-brush! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen! ((0 0 0 1.0"
 #") 1 solid round round #f)) (do-set-brush! ((255 255 0 1.0) solid #f "
 #"#f #f)) (draw-ellipse -3 57 6 6) (do-set-brush! ((255 255 255 1.0) s"
 #"olid #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) ("
 #"do-set-brush! ((255 255 0 1.0) solid #f #f #f)) (draw-ellipse 27 87 "
 #"6 6) (do-set-brush! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen!"
 #" ((0 0 0 1.0) 1 solid round round #f)) (do-set-brush! ((255 255 0 1."
 #"0) solid #f #f #f)) (draw-ellipse 57 87 6 6) (do-set-brush! ((255 25"
 #"5 255 1.0) solid #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 solid round "
 #"round #f)) (do-set-brush! ((255 255 0 1.0) solid #f #f #f)) (draw-el"
 #"lipse 87 57 6 6) (do-set-brush! ((255 255 255 1.0) solid #f #f #f)) "
 #"(do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-set-brush! (("
 #"255 255 0 1.0) solid #f #f #f)) (draw-ellipse 87 27 6 6) (do-set-bru"
 #"sh! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 "
 #"solid round round #f)) (do-set-brush! ((255 255 0 1.0) solid #f #f #"
 #"f)) (draw-ellipse 57 -3 6 6) (do-set-brush! ((255 255 255 1.0) solid"
 #" #f #f #f)) (do-set-pen! ((0 0 0 1.0) 1 solid round round #f)) (do-s"
 #"et-brush! ((255 255 0 1.0) solid #f #f #f)) (draw-ellipse 27 -3 6 6)"
 #" (do-set-brush! ((255 255 255 1.0) solid #f #f #f)) (do-set-pen! ((0"
 #" 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((222 154 66 1.0) 3 "
 #"solid round round #f)) (draw-spline 30 0 45 45 90 30) (do-set-pen! ("
 #"(0 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((111 77 33 1.0) 3"
 #" solid round round #f)) (draw-spline 60 0 45 45 90 60) (do-set-pen! "
 #"((0 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((77 231 99 1.0) "
 #"3 solid round round #f)) (draw-spline 60 90 45 45 30 90) (do-set-pen"
 #"! ((0 0 0 1.0) 1 solid round round #f)) (do-set-pen! ((188 52 132 1."
 #"0) 3 solid round round #f)) (draw-spline 0 60 45 45 0 30) (do-set-pe"
 #"n! ((0 0 0 1.0) 1 solid round round #f))))"
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; -----------------------------------------------------------------"
 #"----------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; data representation of tiles"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Tile"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ["
0 0 14 3 4 #"tile"
0 0 24 3 2 #" ["
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 2 #"]]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 5 #"where"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"every"
0 0 24 3 1 #" "
0 0 14 3 4 #"Port"
0 0 24 3 1 #" "
0 0 14 3 6 #"occurs"
0 0 24 3 1 #" "
0 0 14 3 4 #"once"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 2 #"no"
0 0 24 3 1 #" "
0 0 14 3 4 #"Port"
0 0 24 3 1 #" "
0 0 14 3 6 #"occurs"
0 0 24 3 1 #" "
0 0 14 3 5 #"twice"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"four"
0 0 24 3 1 #" "
0 0 14 3 5 #"Edges"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 6 #"sorted"
0 0 24 3 1 #" "
0 0 14 3 9 #"according"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 9 #"ascending"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 9 #"according"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 5 #"their"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 4 #"Port"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Edge"
0 0 24 3 3 #"   "
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"Port"
0 0 24 3 1 #" "
0 0 14 3 4 #"Port"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 5 #"where"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"*"
0 0 24 3 2 #") "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"Port"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 8 #"strictly"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"than"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; -----------------------------------------------------------------"
 #"------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; tile equality "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Tile"
0 0 24 3 1 #" "
0 0 14 3 4 #"Tile"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tile-equality"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-0"
0 0 24 3 1 #" "
0 0 14 3 7 #"-equal?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"veq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 2 #" ("
0 0 14 3 14 #"struct->vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"vector-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 12 #"LOOKUP-FIELD"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"bs"
0 0 24 3 2 #" ("
0 0 14 3 14 #"struct->vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"vector-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"bs"
0 0 24 3 1 #" "
0 0 14 3 12 #"LOOKUP-FIELD"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 2 #"bs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"or~"
0 0 24 3 2 #" ("
0 0 14 3 4 #"veq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 23 3 5 #"#:let"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotate-tile"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"veq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 23 3 5 #"#:let"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotate-tile"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"veq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 23 3 5 #"#:let"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotate-tile"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"veq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 4 #"c2-3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Tile"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Tile"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotate-tile"
0 0 24 3 1 #" "
0 0 14 3 2 #"c0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"rotated-edges"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (("
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tile-lo4edges"
0 0 24 3 1 #" "
0 0 14 3 2 #"c0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 2 #" ("
0 0 14 3 9 #"90degrees"
0 0 24 3 2 #" ("
0 0 14 3 9 #"edge-from"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"90degrees"
0 0 24 3 2 #" ("
0 0 14 3 7 #"edge-to"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"<-port"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 3 #") ("
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 3 #") ("
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"create-tile"
0 0 24 3 1 #" "
0 0 14 3 13 #"rotated-edges"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 3 #" {["
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 2 #"] "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Tile"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"create-tile"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"tile"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 1 #" "
0 0 14 3 6 #"<-port"
0 0 24 3 1 #" "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 14 3 9 #"edge-from"
0 0 24 3 2 #") "
0 0 14 3 7 #"lookup0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Edge"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Edge"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotate-edge"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 2 #" ("
0 0 14 3 9 #"90degrees"
0 0 24 3 2 #" ("
0 0 14 3 9 #"edge-from"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"90degrees"
0 0 24 3 2 #" ("
0 0 14 3 7 #"edge-to"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"<-port"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 3 #") ("
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 3 #") ("
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"90to"
0 0 24 3 1 #" "
0 0 14 3 6 #"90from"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; -----------------------------------------------------------------"
 #"------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; lookup of internal connections "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"lookup0"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 9 #"this-tile"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-lookup"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-lookup"
0 0 24 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"set-tile-lookup!"
0 0 24 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-lookup"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"new-lookup"
0 0 24 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-lookup"
0 0 24 3 1 #" "
0 0 14 3 4 #"tile"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tile-lo4edges"
0 0 24 3 1 #" "
0 0 14 3 4 #"tile"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 3 #")) "
0 0 14 3 6 #"<-port"
0 0 24 3 1 #" "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 5 #"_tile"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"port->index"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; -----------------------------------------------------------------"
 #"------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";; the structure definition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"LOOKUP-FIELD"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"tile"
0 0 24 3 2 #" ["
0 0 14 3 8 #"lo4edges"
0 0 24 3 2 #" {"
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 23 3 9 #"#:mutable"
0 0 24 3 2 #"}]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 13 #"#:transparent"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 10 #"#:property"
0 0 24 3 1 #" "
0 0 14 3 10 #"prop:proce"
0 0 14 3 4 #"dure"
0 0 24 3 1 #" "
0 0 14 3 7 #"lookup0"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 14 #"gen:equal+hash"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"equal-proc"
0 0 24 3 1 #" "
0 0 14 3 13 #"tile-equality"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"hash-proc"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 4 #"))  "
0 0 17 3 25 #";; consistent with equal "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"hash2-proc"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 8 #"simulate"
0 0 24 3 2 #" ("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 2 #" ("
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 2 #") "
0 0 23 3 8 #"#:prefab"
0 0 24 3 2 #")}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"edge-from"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"edge-to"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; -----------------------------------------------------------------"
 #"----------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 3 #" {["
0 0 14 3 6 #"Listof"
0 0 24 3 2 #" ["
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 14 3 9 #"PortIndex"
0 0 24 3 1 #" "
0 0 14 3 9 #"PortIndex"
0 0 24 3 3 #"]] "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Tile"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"port-indexes->tile"
0 0 24 3 1 #" "
0 0 14 3 5 #"ports"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"tile"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"index->port"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"index->port"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"ports"
0 0 24 3 2 #") "
0 0 14 3 7 #"lookup0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; converting a Tile to an ordered \"list map\" of from-to edges for"
 #" all 8 ports "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"tile->list-map"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tile-lo4edges"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"sort"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 5 #"edges"
0 0 24 3 3 #")) "
0 0 14 3 6 #"<-port"
0 0 24 3 1 #" "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"tile->list-map"
0 0 24 3 2 #" ("
0 0 14 3 18 #"port-indexes->tile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 11 #"index->port"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; -----------------------------------------------------------------"
 #"----------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; data examples "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; this breaks the contract but it's good for drawing a blank tile "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"blank-tile"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 14 3 5 #"dummy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; two unique examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"one-from"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"one-to"
0 0 24 3 3 #"   "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile1"
0 0 24 3 2 #" ("
0 0 14 3 18 #"port-indexes->tile"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"one-from"
0 0 24 3 1 #" "
0 0 14 3 6 #"one-to"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"two-from"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"two-to"
0 0 24 3 3 #"   "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 2 #" ("
0 0 14 3 18 #"port-indexes->tile"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"two-from"
0 0 24 3 1 #" "
0 0 14 3 6 #"two-to"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; a rotated version of the second example"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"90two-from"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"90two-to"
0 0 24 3 3 #"   "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"90tile2"
0 0 24 3 2 #" ("
0 0 14 3 18 #"port-indexes->tile"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"90two-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"90two-to"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"check-false"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile1"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 7 #"90tile2"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 2 #") "
0 0 19 3 36 #"\"these are the two tiles used above\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotate-tile"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 2 #") "
0 0 19 3 24 #"\"one tile equals itself "
0 0 29 3 8 #"roatated"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"tile1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"tile2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"90tile2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 3 #" (("
0 0 14 3 11 #"rotate-tile"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 3 #") ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"index->port"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 1 #" "
0 0 14 3 7 #"90tile2"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"make "
0 0 19 3 5 #"sure "
0 0 19 3 23 #"the cache is invisible\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; -----------------------------------------------------------------"
 #"----------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; converting a Tile into a pict: make every size depend on the TILE"
 #"-SIZE"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #") ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"bad"
0 0 19 3 1 #" "
0 0 19 3 6 #"choice"
0 0 19 3 1 #" "
0 0 19 3 9 #"for size\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-HALF"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"TILE"
0 0 24 3 2 #" ("
0 0 14 3 16 #"filled-rectangle"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:color"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #" "
0 0 23 3 14 #"#:border-color"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"PORT-COLOR"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"PORT-RADIUS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"PORT-DIAMETER"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"PORT-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"PORT"
0 0 24 3 3 #") ("
0 0 14 3 14 #"filled-ellipse"
0 0 24 3 1 #" "
0 0 14 3 13 #"PORT-DIAMETER"
0 0 24 3 1 #" "
0 0 14 3 13 #"PORT-DIAMETER"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:color"
0 0 24 3 1 #" "
0 0 14 3 10 #"PORT-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"0-THIRD"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"1-THIRD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"2-THIRD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 7 #"1-THIRD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"3-THIRD"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"PORT-LOCATIONS"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 28 3 1 #","
0 0 14 3 7 #"1-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"0-THIRD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 28 3 1 #","
0 0 14 3 7 #"2-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"0-THIRD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 28 3 1 #","
0 0 14 3 7 #"3-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"1-THIRD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 28 3 1 #","
0 0 14 3 7 #"3-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"2-THIRD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 28 3 1 #","
0 0 14 3 7 #"2-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"3-THIRD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 28 3 1 #","
0 0 14 3 7 #"1-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"3-THIRD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 28 3 1 #","
0 0 14 3 7 #"0-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"2-THIRD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 28 3 1 #","
0 0 14 3 7 #"0-THIRD"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"1-THIRD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"EDGE-COLORS"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (("
0 0 14 3 4 #"___e"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tile-lo4edges"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile1"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"j"
0 0 24 3 1 #"("
0 0 14 3 11 #"in-naturals"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 17 3 41 #";; these numbers might as well be random "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-color"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 3 #"111"
0 0 24 3 2 #") "
0 0 21 3 3 #"256"
0 0 24 3 3 #") ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 2 #"77"
0 0 24 3 2 #") "
0 0 21 3 3 #"256"
0 0 24 3 3 #") ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 2 #") "
0 0 21 3 3 #"256"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tile->pict"
0 0 24 3 1 #" "
0 0 14 3 2 #"c0"
0 0 24 3 1 #" "
0 0 23 3 13 #"#:edge-colors"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ec*"
0 0 24 3 1 #" "
0 0 14 3 11 #"EDGE-COLORS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 4 #"dots"
0 0 24 3 3 #") ("
0 0 14 3 15 #"tile-with-ports"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"for/fold"
0 0 24 3 3 #" (("
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 5 #")) (("
0 0 14 3 4 #"edge"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tile-lo4edges"
0 0 24 3 1 #" "
0 0 14 3 2 #"c0"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 3 #"ec*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 2 #" ("
0 0 14 3 11 #"port->index"
0 0 24 3 2 #" ("
0 0 14 3 9 #"edge-from"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"port->index"
0 0 24 3 2 #" ("
0 0 14 3 7 #"edge-to"
0 0 24 3 1 #" "
0 0 14 3 4 #"edge"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"dots"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"dots"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"pin-curve"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot1"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot2"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Pict"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pict"
0 0 24 3 1 #" "
0 0 14 3 4 #"Port"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pict"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"tile-pict"
0 0 24 3 1 #" "
0 0 14 3 4 #"pict"
0 0 24 3 1 #" "
0 0 14 3 4 #"port"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"match-define"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 14 #"PORT-LOCATIONS"
0 0 24 3 2 #" ("
0 0 14 3 11 #"port->index"
0 0 24 3 1 #" "
0 0 14 3 4 #"port"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"pin-over"
0 0 24 3 1 #" "
0 0 14 3 9 #"tile-pict"
0 0 24 3 2 #" ("
0 0 14 3 6 #"adjust"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 10 #"pict-width"
0 0 24 3 1 #" "
0 0 14 3 4 #"pict"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"adjust"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pict-height"
0 0 24 3 1 #" "
0 0 14 3 4 #"pict"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 4 #"pict"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Real"
0 0 24 3 1 #" "
0 0 14 3 4 #"Real"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Real"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"adjust"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 6 #"z-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 7 #"0-THIRD"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 7 #"3-THIRD"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 6 #"z-size"
0 0 24 3 1 #" "
0 0 14 3 6 #"z-size"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 6 #"z-size"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 4 #"Pict"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pict"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pict"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Instanceof"
0 0 24 3 1 #" "
0 0 14 3 6 #"Color%"
0 0 24 3 2 #") "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pict"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pin-curve"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot1"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot2"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 24 3 4 #" { ("
0 0 14 3 10 #"Instanceof"
0 0 24 3 1 #" "
0 0 14 3 4 #"DC<%"
0 0 24 3 2 #") "
0 0 14 3 7 #"Integer"
0 0 24 3 1 #" "
0 0 14 3 7 #"Integer"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Void"
0 0 24 3 2 #" }"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 55 #";; add a spline from dot1 to dot2 via the center of sq "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"draw-connections"
0 0 24 3 1 #" "
0 0 14 3 2 #"dc"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #" "
0 0 14 3 2 #"dy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-pen"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 2 #"dc"
0 0 24 3 1 #" "
0 0 14 3 7 #"get-pen"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #";; --------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"d"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot1"
0 0 24 3 1 #" "
0 0 14 3 7 #"cc-find"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #" "
0 0 14 3 2 #"dy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 3 #") ("
0 0 14 3 2 #"d+"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 4 #"dot2"
0 0 24 3 1 #" "
0 0 14 3 7 #"cc-find"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #" "
0 0 14 3 2 #"dy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"xc"
0 0 24 3 1 #" "
0 0 14 3 2 #"yc"
0 0 24 3 3 #") ("
0 0 14 3 2 #"d+"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 7 #"cc-find"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #" "
0 0 14 3 2 #"dy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 2 #"dc"
0 0 24 3 1 #" "
0 0 14 3 7 #"set-pen"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 4 #"pen%"
0 0 24 3 2 #" ["
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #"] ["
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 2 #"dc"
0 0 24 3 1 #" "
0 0 14 3 11 #"draw-spline"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 14 3 2 #"y1"
0 0 24 3 1 #" "
0 0 14 3 2 #"xc"
0 0 24 3 1 #" "
0 0 14 3 2 #"yc"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 2 #"y2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #";; --------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 2 #"dc"
0 0 24 3 1 #" "
0 0 14 3 7 #"set-pen"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-pen"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"connections"
0 0 24 3 2 #" ("
0 0 14 3 2 #"dc"
0 0 24 3 1 #" "
0 0 14 3 16 #"draw-connections"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"cc-superimpose"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 11 #"connections"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" {"
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pict"
0 0 24 3 2 #" ["
0 0 14 3 6 #"Listof"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pict"
0 0 24 3 3 #"])}"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; generate the tile with unique port points "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"tile-with-ports"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"for/fold"
0 0 24 3 3 #" (("
0 0 14 3 2 #"sq"
0 0 24 3 1 #" "
0 0 14 3 4 #"TILE"
0 0 24 3 3 #") ("
0 0 14 3 4 #"dots"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 7 #"())) (("
0 0 14 3 3 #"x-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 14 #"PORT-LOCATIONS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 12 #"match-define"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 3 #"x-y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"dot"
0 0 24 3 2 #" ("
0 0 14 3 4 #"PORT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pin-over"
0 0 24 3 1 #" "
0 0 14 3 2 #"sq"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 11 #"PORT-RADIUS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 11 #"PORT-RADIUS"
0 0 24 3 2 #") "
0 0 14 3 3 #"dot"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"dot"
0 0 24 3 1 #" "
0 0 14 3 4 #"dots"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; -----------------------------------------------------------------"
 #"----------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; visualize"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile1"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 1 #" "
0 0 14 3 7 #"90tile2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict1"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"vc-append"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 9 #"hc-append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tile->pict"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 3 #")) "
0 0 14 3 3 #"loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 9 #"hc-append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tile->pict"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 3 #")) "
0 0 14 3 3 #"loc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tile->pict"
0 0 24 3 1 #" "
0 0 14 3 5 #"tile2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"pict2"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 9 #"hc-append"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 5 #"PORTS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"jack-o-lantern"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"TILE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #") "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.5"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"pict1"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"pict2"
0 0 24 3 1 #")"
0           0
